/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BilateralTradeInternal,
  BilateralTradeInternalInterface,
} from "../../../../contracts/trade/bilateral/BilateralTradeInternal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITradeInternal.TradeStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "NotifyTrade",
    type: "event",
  },
] as const;

export class BilateralTradeInternal__factory {
  static readonly abi = _abi;
  static createInterface(): BilateralTradeInternalInterface {
    return new Interface(_abi) as BilateralTradeInternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BilateralTradeInternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BilateralTradeInternal;
  }
}
