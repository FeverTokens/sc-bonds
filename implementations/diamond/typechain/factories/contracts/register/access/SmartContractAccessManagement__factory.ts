/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SmartContractAccessManagement,
  SmartContractAccessManagementInterface,
} from "../../../../contracts/register/access/SmartContractAccessManagement";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "DisableContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "EnableContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "disableContractFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "enableContractToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isCallerApprovedSmartContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress_",
        type: "address",
      },
    ],
    name: "isContractAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506102f48061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80636f2ddb5f1461004e578063c2faae5914610075578063d614284a1461007d578063d696fb0b14610092575b5f80fd5b61006161005c36600461026d565b6100a5565b604051901515815260200160405180910390f35b6100616100b5565b61009061008b3660046102a7565b6100c3565b005b6100906100a03660046102a7565b6100cf565b5f6100af826100d8565b92915050565b5f6100be61011d565b905090565b6100cc81610161565b50565b6100cc816101d8565b5f7fad23b20a8d3b04b57ac5eefbd00cb491b7ef4801d0b23a5da6c241252ca912ce816101048461023d565b5f90815260209290925250604090205460ff1692915050565b5f7fad23b20a8d3b04b57ac5eefbd00cb491b7ef4801d0b23a5da6c241252ca912ce816101493361023d565b5f90815260209290925250604090205460ff16919050565b7fad23b20a8d3b04b57ac5eefbd00cb491b7ef4801d0b23a5da6c241252ca912ce5f8281526020829052604090819020805460ff19166001179055517fbaf2f827de189827a9b5ea8781dbbffcad675a367dccaad8b9ada866795598d7906101cc9084815260200190565b60405180910390a15050565b7fad23b20a8d3b04b57ac5eefbd00cb491b7ef4801d0b23a5da6c241252ca912ce5f8281526020828152604091829020805460ff1916905590518381527f2876b9bd97a638025f28a0d50cb5f3cd9e5c0b85624fb7ee15267149452c2d7491016101cc565b60408051603f833b908101601f191682019092528181525f91808360208401863c50805160209091012092915050565b5f6020828403121561027d575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102a0575f80fd5b9392505050565b5f602082840312156102b7575f80fd5b503591905056fea2646970667358221220a61deec072e8a3f06a58559aff4053f4b69dfc2fe4d24c4765c77cbcaaeeb4b664736f6c63430008140033";

type SmartContractAccessManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartContractAccessManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartContractAccessManagement__factory extends ContractFactory {
  constructor(...args: SmartContractAccessManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SmartContractAccessManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SmartContractAccessManagement__factory {
    return super.connect(runner) as SmartContractAccessManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartContractAccessManagementInterface {
    return new Interface(_abi) as SmartContractAccessManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SmartContractAccessManagement {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SmartContractAccessManagement;
  }
}
