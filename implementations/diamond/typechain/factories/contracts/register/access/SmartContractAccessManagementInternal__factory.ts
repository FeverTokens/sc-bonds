/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SmartContractAccessManagementInternal,
  SmartContractAccessManagementInternalInterface,
} from "../../../../contracts/register/access/SmartContractAccessManagementInternal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "DisableContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "contractHash",
        type: "bytes32",
      },
    ],
    name: "EnableContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
] as const;

export class SmartContractAccessManagementInternal__factory {
  static readonly abi = _abi;
  static createInterface(): SmartContractAccessManagementInternalInterface {
    return new Interface(
      _abi
    ) as SmartContractAccessManagementInternalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SmartContractAccessManagementInternal {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SmartContractAccessManagementInternal;
  }
}
